locale: zh-Hant
namespace: css
translations:
  ###########################################################################
  # General
  ###########################################################################

  - key: general.state_of_html.intro
    t: |
      雖然網頁開發人員經常於專注於 JavaScript 和 CSS，但若沒有 HTML 作為基礎，一切都是不可能的。

      過去可能看起來 HTML 已經很久沒有更新，但改變將至。
      像是 `<selectlist>` 這樣的新元素正在被開發中，還有像是 popover 這樣厲害的新功能，以及好多
      新興的瀏覽器 API (Web Components、漸進式網頁應用程式、等等）。

      今年 [Lea Verou](https://lea.verou.me/) 扛下了設計這份問券的的艱鉅任務，包含內容、使用者體驗，和許多其他面向。

      有了 [State of JS](http://stateofjs.com/) 和 [State of CSS](https://stateofcss.com/) 的成功，我們這次推動了了 State of HTML 問券；
      完成了網路平台三部曲的最後一個缺少的部分，讓我們可以完整追蹤網路平台的演變。
      就跟之前一樣，你的回應將會協助瀏覽器廠商規劃他們未來的計劃和優先順序，並達成更好的相容性。
      因此，若你投入時間仔細回答問券，能夠得到的回報不容小覷！

  - key: general.state_of_html.description
    t: 年度網路平台開發者調查

  ###########################################################################
  # Sections
  ###########################################################################

  - key: sections.forms.title
    t: 表單
  - key: sections.forms.description
    t: 與表單相關的元件和屬性。

  - key: sections.interactivity.title
    t: 互動性
  - key: sections.interactivity.description
    t: 提供豐富使用者互動的 API。

  - key: sections.web_components.title
    t: Web Components
  - key: sections.web_components.description
    t: 開發和使用 web components。

  - key: sections.content.title
    t: 內容
  - key: sections.content.description
    t: 嵌入內容、多媒體、資料和其他內容相關的功能。

  - key: sections.external_content.title
    t: 外部內容
  - key: sections.external_content.description
    t: 嵌入外部資源和其他多媒體 API。

  - key: sections.accessibility.title
    t: 親和力
  - key: sections.accessibility.description
    t: 讓所有人都能無障礙地能使用網站和應用程式。

  - key: sections.mobile_web_apps.title
    t: 類似原生的網頁應用程式
  - key: sections.mobile_web_apps.description
    t: 開發為行動裝置和或電腦量身打造的網路應用程式。

  - key: sections.other_features.title
    t: 其他功能
  - key: sections.other_features.description
    t: 其他 HTML 元件和瀏覽器 APIs。

  - key: sections.other_tools.title
    t: 其他工具和功能
  - key: sections.other_tools.description
    t: 開發中使用的其他工具或功能。

  - key: sections.usage.title
    t: 使用狀況
  - key: sections.usage.description
    t: 你的 HTML 使用狀況。

  ###########################################################################
  # Features
  ###########################################################################

  # forms

  - key: features.form_controls
    t: 表單控制
  - key: features.form_controls.question
    t: 你使用過哪些表單控制？

  - key: features.form_input_types
    t: 輸入類型
  - key: features.form_input_types.question
    t: 你使用過哪些輸入類型？
  - key: options.form_input_types.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.form_validation_features
    t: 表單驗證
  - key: features.form_validation_features.question
    t: 你使用過以下哪些表單驗證功能？
  - key: options.form_validation_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.forms_pain_points
    t: 表單的痛點
  - key: features.forms_pain_points.question
    t: 你使用 HTML 表單有哪些痛點？
  - key: features.forms_pain_points.description
    t: |
      考慮各種表單選項（例如
      ：`<input>`, `<textarea>`, `<select>`, `<button>` 等等。）、行為（例如：驗證、自動完成）、透過 JS 處理表單、編輯 APIs（例如：`contentEditable`）等等。
      任何困擾你的事情都是公平的——瀏覽器支援、缺少的功能、樣式等等。
  - key: features.forms_pain_points.placeholder
    t: |
      痛點 #{index}…

  # interactivity

  - key: features.dom_attribute_features
    t: DOM 屬性相關方法
  - key: features.dom_attribute_features.question
    t: 你使用過以下哪些與 DOM 屬性相關的方法？

  - key: features.dom_html_features
    t: HTML 字串處理功能
  - key: features.dom_html_features.question
    t: 你使用過以下哪些 DOM HTML 字串處理功能？

  - key: features.dom_methods
    t: Element reparenting DOM Methods元素重新調整的 DOM 方法

  - key: features.dom_moving_element_features
    t: Element-moving DOM Methods 元素移動的 DOM 方法
  - key: features.dom_moving_element_features.question
    t: 你使用過以下哪些方法來移動 DOM 元素？
  # - key: options.dom_methods.element_innerhtml.description
  #   t: |
  #     `element.innerHTML = rawHTML`
  # - key: options.dom_methods.element_textcontent.description
  #   t: |
  #     `element.textContent = text`
  # - key: options.dom_methods.element_insert_adjacent_html.description
  #   t: |
  #     `element.insertAdjacentHTML("beforebegin", rawHTML)`
  # - key: options.dom_methods.element_insert_adjacent_element.description
  #   t: |
  #     `element.insertAdjacentElement("afterend", otherElement)`
  # - key: options.dom_methods.element_append.description
  #   t: |
  #     `parent.append(...children)`
  # - key: options.dom_methods.element_append_child.description
  #   t: |
  #     `parent.appendChild(child)`
  # - key: options.dom_methods.element_before_after.description
  #   t: |
  #     `element.before(otherElement)`
  # - key: options.dom_methods.element_replace_with.description
  #   t: |
  #     Replaced the older `parent.replaceChild(el2, el1)` method.
  # - key: options.dom_methods.element_replace_child.description
  #   t: |
  #     `parent.replaceChild(newChild, oldChild)`
  # - key: options.dom_methods.element_replace_children.description
  #   t: |
  #     `element.replaceChildren(...newChildren)`
  # - key: options.dom_methods.element_toggle_attribute.description
  #   t: |
  #     `element.toggleAttribute("data-selected", isSelected)`
  # - key: options.dom_methods.document_create_document_fragment.description
  #   t: |
  #     `let fragment = document.createDocumentFragment()`
  - key: options.dom_methods.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.interactivity_pain_points
    t: 互動性的痛點
  - key: features.interactivity_pain_points.question
    t: 你在動態 HTML 改變有什麼痛點？
  - key: features.interactivity_pain_points.description
    t: |
      瀏覽器不相容或缺乏支援、缺少功能以及你面臨的其他問題
        圍繞互動元素和行為（表單除外）、DOM 操作、事件和相關 API。

  - key: features.interactivity_pain_points.placeholder
    t: |
      痛點 #{index}…

  - key: features.interactivity_techniques
    t: 互動方法
  - key: features.interactivity_techniques.question
    t: 你使用過哪些方法來加入互動或動態修改 HTML？
  - key: options.interactivity_techniques.css_for_interactivity
    t: 用於互動的 CSS（toggles, tabs, etc.）
  - key: options.interactivity_techniques.js_dom_libraries
    t: JavaScript DOM 函式庫（jQuery, etc.）
  - key: options.interactivity_techniques.js_framework
    t: JavaScript 框架（React, Vue, etc.）
  - key: options.interactivity_techniques.vanilla_js
    t: 純 JavaScript（無 frameworks 或 libraries）
  - key: options.interactivity_techniques.web_components
    t: Web Components
  - key: options.interactivity_techniques.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  # content

  - key: features.machine_readable_features
    t: 機器可讀資料
  - key: features.machine_readable_features.question
    t: 你使用下列哪一種方法在 HTML 中包含機器可讀的資料？
  - key: options.machine_readable_features.rdfa.description
    t: |
      `property`、`typeof` 等等。
  - key: options.machine_readable_features.json_ld.description
    t: |
      `<script type="application/ld+json">`
  - key: options.machine_readable_features.microdata.description
    t: |
      `itemprop`、`itemscope` 等等。

  - key: features.multiple_languages_support
    t: 支援多國語系
  - key: features.multiple_languages_support.question
    t: 你經常參與需要支援多國語系的專案嗎？
  - key: options.multiple_languages_support.never
    t: 從來沒有
  - key: options.multiple_languages_support.infrequently
    t: 不經常（每年少於一次）
  - key: options.multiple_languages_support.frequently
    t: 經常（每年超過一次）
  - key: options.multiple_languages_support.all_the_time
    t: 時時刻刻

  - key: features.i18n_features
    t: 國際化功能
  - key: features.i18n_features.question
    t: 你使用過以下哪些國際化功能
  - key: options.i18n_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  # - key: options.i18n_features.intl_datetimeformat.description
  #   t:
  # - key: options.i18n_features.intl_collator.description
  #   t:
  # - key: options.i18n_features.intl_listformat.description
  #   t:
  # - key: options.i18n_features.intl_numberformat.description
  #   t:
  # - key: options.i18n_features.intl_messageformat.description
  #   t:
  # - key: options.i18n_features.intl_pluralrules.description
  #   t:
  # - key: options.i18n_features.intl_relative_time_format.description
  #   t:
  # - key: options.i18n_features.intl_segmenter.description
  #   t:
  # - key: options.i18n_features.intl_localematcher.description
  #   t:

  - key: features.content_pain_points
    t: 內容痛點
  - key: features.content_pain_points.question
    t: 你在管理 HTML 內容有哪些痛點？
  - key: features.content_pain_points.description
    t: |
      考慮嵌入（多媒體、iframe、SVG 等）、機器可讀資料、國際化和本地化、安全性和隱私、效能等。
      缺少功能、瀏覽器不兼容以及你面臨的其他問題都是很正常的。
  - key: features.content_pain_points.placeholder
    t: |
      痛點 #{index}…

  # Content

  - key: features.external_content_elements
    t: 外部內容元素
  - key: features.external_content_elements.question
    t: 你使用過下列哪些元素？
  - key: options.external_content_elements.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.privacy_security_features
    t: |
      安全性 & 隱私功能
  - key: features.privacy_security_features.question
    t: |
      你使用過以下哪些安全性和隱私功能？
  - key: options.privacy_security_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.rel_attribute
    t: 資源提示
  - key: features.rel_attribute.question
    t: |
      你將以下哪些值用於 `<link>` 的 `rel` 屬性？

  # - key: features.external_content_pain_points
  #   t: External Content Pain Points
  # - key: features.external_content_pain_points.question
  #   t: What are your biggest pain points around using external content in HTML?
  # - key: features.external_content_pain_points.placeholder
  #   t: |
  #     Pain point #{index}…
  # - key: features.external_content_pain_points.description
  #   t: |
  #     External content includes `<iframe>`, graphics and multimedia, etc.

  # Web Components

  - key: features.web_components_libraries
    t: Web Components 函式庫
  - key: features.web_components_libraries.question
    t: 你有使用過任何 Web Components 函式庫嗎？

  - key: features.web_components_features
    t: 其他 Web Component 功能
  - key: features.web_components_features.question
    t: 你使用過以下哪些 web component 的功能？
  - key: options.web_components_features.host_pseudos.description
    t: |
      `:host` , `:host()` , `:host-context()`
  - key: options.web_components_features.is_attribute.description
    t: |
      `<button is="fancy-button">`
  - key: options.web_components_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.using_web_components_pain_points
    t: 使用 Web Components 的痛點
  - key: features.using_web_components_pain_points.question
    t: 你*使用* web components 最大的痛點是什麼？
  - key: features.using_web_components_pain_points.description
    t: 使用你或其他人製作的 Web Components。缺少功能、瀏覽器不兼容等。
  - key: features.using_web_components_pain_points.placeholder
    t: |
      痛點 #{index}…

  - key: features.making_web_components_pain_points
    t: 開發 Web Components 的痛點
  - key: features.making_web_components_pain_points.question
    t: 你*開發* web components 最大的痛點是什麼？
  - key: features.making_web_components_pain_points.description
    t: |
      是什麼阻止你創造出令人驚艷的 component？缺少功能、瀏覽器不兼容等。
  - key: features.making_web_components_pain_points.placeholder
    t: |
      痛點 #{index}…

  # Accessibility

  - key: features.accessibility_features
    t: 無障礙功能
  - key: features.accessibility_features.question
    t: 你曾經使用過哪些無障礙功能？

  - key: features.accessibility_tools
    t: 無障礙工具
  - key: features.accessibility_tools.question
    t: 你使用什麼工具進行無障礙測試？

  - key: features.accessibility_pain_points
    t: 無障礙通點
  - key: features.accessibility_pain_points.question
    t: 你在網路無障礙方面最大的痛點是什麼？
  - key: features.accessibility_pain_points.placeholder
    t: |
      痛點 #{index}…

  - key: features.accessibility_disabilities
    t: 使用者障礙
  - key: features.accessibility_disabilities.question
    t: 在製作網站時，你會考慮哪些類型的使用者障礙？

  - key: options.accessibility_disabilities.hearing_impairments
    t: 聽力障礙
  - key: options.accessibility_disabilities.hearing_impairments.description
    t: 耳聾、耳鳴等等。

  - key: options.accessibility_disabilities.mobility_impairments
    t: 行動障礙
  - key: options.accessibility_disabilities.mobility_impairments.description
    t: 關節炎、腕隧道症等等。

  - key: options.accessibility_disabilities.learning_disabilities
    t: 學習障礙
  - key: options.accessibility_disabilities.learning_disabilities.description
    t: 失讀症、算術障礙等等。

  - key: options.accessibility_disabilities.cognitive_impairments
    t: |
      其他認知障礙
  - key: options.accessibility_disabilities.cognitive_impairments.description
    t: |
      焦慮、自閉症、強迫症、過動症等等。

  - key: options.accessibility_disabilities.vestibular_disorders
    t: 前庭疾病
  - key: options.accessibility_disabilities.vestibular_disorders.description
    t: 癲癇、暈眩等等。

  - key: options.accessibility_disabilities.low_vision
    t: 低視能
  - key: options.accessibility_disabilities.low_vision.description
    t: 失明、高度近視等等。

  - key: options.accessibility_disabilities.atypical_vision
    t: 非典型視覺
  - key: options.accessibility_disabilities.atypical_vision.description
    t: 色盲

  - key: features.accessibility_screenreaders
    t: 螢幕閱讀器
  - key: features.accessibility_screenreaders.question
    t: 你使用哪種螢幕閱讀器進行無障礙測試？

  - key: features.accessibility_techniques
    t: 其他無障礙使用技術
  - key: features.accessibility_techniques.question
    t: 你的常規無障礙策略中還有哪些技術？

  - key: options.accessibility_techniques.tabindex
    t: |
      使用 `tabindex` 改善焦點順序
  - key: options.accessibility_techniques.tabindex.description
    t: |
      移動 `tabindex`、`tabindex="0"` 以啟用焦點等等。
  - key: options.accessibility_techniques.keyboard_navigation
    t: 直覺的鍵盤導航
  - key: options.accessibility_techniques.keyboard_navigation.description
    t: 除了 tab 鍵順序之外。
  - key: options.accessibility_techniques.aria_attributes
    t: ARIA 屬性
  - key: options.accessibility_techniques.aria_attributes.description
    t: |
      `role` 和 `aria-*` 屬性
  - key: options.accessibility_techniques.descriptive_alt_text
    t: |
      描述性 `alt` 文字
  - key: options.accessibility_techniques.descriptive_alt_text.description
    t: 提供描述圖片的目的或內容的替代文字。
  - key: options.accessibility_techniques.skip_to_content
    t: 跳至內容連結
  - key: options.accessibility_techniques.skip_to_content.description
    t: 讓使用者直接跳到頁面的主要內容。
  - key: options.accessibility_techniques.fieldset_and_legend
    t: |
      `<fieldset>` 和 `<legend>`
  - key: options.accessibility_techniques.fieldset_and_legend.description
    t: |
      使用 `<fieldset>` 和 `<legend>` 對相關表單元素進行分組。
  - key: options.accessibility_techniques.headings_hierarchy
    t: 資訊層次結構
  - key: options.accessibility_techniques.headings_hierarchy.description
    t: |
      使用正確表示頁面資訊層次結構的標題（`<h1>` - `<h6>`）。
  - key: options.accessibility_techniques.meaningful_link_text
    t: 有意義的連結文字
  - key: options.accessibility_techniques.meaningful_link_text.description
    t: 確保連結文字脫離上下文有意義
  - key: options.accessibility_techniques.form_control_label
    t: 表單控制標籤
  - key: options.accessibility_techniques.form_control_label.description
    t: |
      確保每個表單控制都有一個 `<label>`（或 `aria-label` 等等）。
  - key: options.accessibility_techniques.visible_focus
    t: 可見 Focus Ring
  - key: options.accessibility_techniques.visible_focus.description
    t: 確保在需要時 focus ring 輪廓清晰可見。
  - key: options.accessibility_techniques.pointer_alternative
    t: 不只依賴 Pointer
  - key: options.accessibility_techniques.pointer_alternative.description
    t: 確保 pointer 互動（例如：hover）有鍵盤替代方案。
  - key: options.accessibility_techniques.good_color_contrast
    t: 足夠的對比度
  - key: options.accessibility_techniques.good_color_contrast.description
    t: 使用對比度檢查器確保足夠的色彩對比。
  - key: options.accessibility_techniques.color_alternative
    t: 不只依賴顏色
  - key: options.accessibility_techniques.color_alternative.description
    t: 確保不會僅透過顏色來傳達任何訊息。
  - key: options.accessibility_techniques.prefers_reduced_motion
    t: |
      `prefers-reduced-motion` media query
  - key: options.accessibility_techniques.prefers_reduced_motion.description
    t: 為喜歡較少 motion 的使用者提供替代 CSS。
  - key: options.accessibility_techniques.prefers_contrast
    t: |
      `prefers-contrast` media query
  - key: options.accessibility_techniques.prefers_contrast.description
    t: 為喜歡增加對比度的使用者提供替代 CSS。

  # PWAs

  - key: features.pwa_features
    t: PWA Features
  - key: features.pwa_features.question
    t: Have you used any of the following PWA technologies/APIs?
  - key: options.pwa_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.local_storage_features
    t: Local storage features
  - key: features.local_storage_features.question
    t: Have you used any of the following to store data client-side?
  - key: options.local_storage_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: features.pwa_app_manifest_fields
    t: App Manifest Fields
  - key: features.pwa_app_manifest_fields.question
    t: |
      Which of these app manifest fields (`<link rel="manifest">`) have you used, if any?

  - key: features.native_apps_tools
    t: Native Apps Tools
  - key: features.native_apps_tools.question
    t: Have you used any of these tools to build native apps?
  - key: features.native_apps_tools.description
    t: Excluding scripts, command-line apps, server-side code, etc.
  - key: options.native_apps_tools.na
    t: <span aria-hidden="true">🚫</span> I haven't developed native apps
  - key: options.native_apps_tools.native_languages
    t: Native technologies
  - key: options.native_apps_tools.native_languages.description
    t: Objective-C, Swift, Kotlin, .NET, etc.
  - key: options.native_apps_tools.webviews
    t: Web app loaded via Webviews
  - key: options.native_apps_tools.js_frameworks
    t: JavaScript-based frameworks
  - key: options.native_apps_tools.js_frameworks.description
    t: React Native, Ionic, Electron, etc.
  - key: options.native_apps_tools.other_frameworks
    t: Non-JavaScript frameworks
  - key: options.native_apps_tools.other_frameworks.description
    t: Tauri, Flutter, etc.

  - key: features.mobile_web_apps_pain_points
    t: Native-like Web Apps Pain Points
  - key: features.mobile_web_apps_pain_points.question
    t: What are your biggest pain points around making web apps that feel native?
  - key: features.mobile_web_apps_pain_points.description
    t: Capabilities the Web Platform doesn't yet have, browser differences in related APIs, etc.
  - key: features.mobile_web_apps_pain_points.placeholder
    t: |
      痛點 #{index}

  # Other Tools

  - key: other_tools.site_generators
    t: Site Generators
  - key: other_tools.site_generators.question
    t: Which of these static or dynamic site generators do you regularly use?

  - key: other_tools.ai_tools
    t: AI Tools
  - key: other_tools.ai_tools.question
    t: Which of these AI tools do you regularly use to help you write code?

  - key: other_tools.machine_readable_features
    aliasFor: features.machine_readable_features
  - key: other_tools.machine_readable_features.question
    aliasFor: features.machine_readable_features.question

  - key: options.machine_readable_features.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  - key: other_tools.blast_from_the_past
    t: Blast from the Past!
  - key: other_tools.blast_from_the_past.question
    t: Have you ever used any of the following old-school elements?
  - key: other_tools.blast_from_the_past.description
    t: Blast from the past!
  - key: options.blast_from_the_past.na
    t: <span aria-hidden="true">🚫</span> 以上皆非

  # Usage

  # - key: usage.html_existing_features
  #   t: Unusable HTML Features
  # - key: usage.html_existing_features.question
  #   t: Which existing HTML features are you unable to use?
  # - key: usage.html_existing_features.description
  #   t: |
  #     Existing HTML features that you find yourself recreating using custom components.
  # - key: usage.html_existing_features.placeholder
  #   t: |
  #     ﹤foo type="bar"﹥ (browser incompatibilities, styling limitations, doesn't do X)

  - key: usage.html_interoperability_features
    t: Browser Interoperability
  - key: usage.html_interoperability_features.question
    t: Which existing HTML features or browser APIs are you unable to use because of browser differences or lack of support?
  # - key: usage.html_interoperability_features.description
  #   t: |
  #     Any type of API the survey has asked about is within scope.
  - key: usage.html_interoperability_features.placeholder
    t: |
      Feature #{index}

  - key: usage.html_functionality_features
    t: Limited Functionality
  - key: usage.html_functionality_features.question
    t: Which existing HTML features or browser APIs are you unable to use for other reasons (and why)?
  - key: usage.html_functionality_features.description
    t: |
      Good candidates might be existing HTML features that you often have to recreate or augment using JS.

      Please also specify the reason, such as lack of functionality, difficult styling, poor accessibility, etc.

  - key: usage.html_functionality_features.placeholder.1
    t: |
      Feature #1 (hard to style)
  - key: usage.html_functionality_features.placeholder.2
    t: |
      Feature #2 (limited functionality, poor accessibility)

  - key: usage.what_do_you_use_html_for
    t: HTML Usage
  - key: usage.what_do_you_use_html_for.question
    t: What do you use HTML for?
  - key: options.what_do_you_use_html_for.blogs
    aliasFor: options.what_do_you_use_css_for.blogs
  - key: options.what_do_you_use_html_for.design_systems
    aliasFor: options.what_do_you_use_css_for.design_systems
  - key: options.what_do_you_use_html_for.desktop_apps
    aliasFor: options.what_do_you_use_css_for.desktop_apps
  - key: options.what_do_you_use_html_for.emails
    aliasFor: options.what_do_you_use_css_for.emails
  - key: options.what_do_you_use_html_for.marketing_sites
    aliasFor: options.what_do_you_use_css_for.marketing_sites
  - key: options.what_do_you_use_html_for.mobile_apps
    aliasFor: options.what_do_you_use_css_for.mobile_apps
  - key: options.what_do_you_use_html_for.printed_documents
    aliasFor: options.what_do_you_use_css_for.printed_documents
  - key: options.what_do_you_use_html_for.web_apps
    aliasFor: options.what_do_you_use_css_for.web_apps

  - key: usage.tools_for_other_developers
    t: Ecosystem Impact
  - key: usage.tools_for_other_developers.question
    t: Other than yourself, how many developers use the libraries, packages, components, APIs etc. that you create or maintain?
  - key: usage.tools_for_other_developers.description
    t: |
      Total, if you work on multiple projects that are used by other developers.
      If you’re not sure, pick the closest to your best estimate.
      For open source code, npm downloads might offer a useful data point.
  - key: options.tools_for_other_developers.na
    t: 🚫 None (Just me)
  - key: options.tools_for_other_developers.a_few
    t: A few other developers (e.g. developers within a small team)
  - key: options.tools_for_other_developers.less_than_100
    t: Less than a hundred developers
  - key: options.tools_for_other_developers.less_than_1000
    t: Less than a thousand developers
  - key: options.tools_for_other_developers.more_than_100
    t: Hundreds of developers
  - key: options.tools_for_other_developers.more_than_1000
    t: Thousands of developers
  - key: options.tools_for_other_developers.more_than_1000000
    t: Millions of developers

  - key: usage.html_missing_elements
    t: Missing Elements
  - key: usage.html_missing_elements.question
    t: If you could add 3 elements to HTML, what would they be?
  # - key: usage.html_missing_elements.description
  #   t: |
  #     If you use any component technologies, the components you find yourself reusing across multiple projects could be good candidates.

  #     These could be things like Accordion, Alert, Calendar, Carousel, Combobox/Autocomplete, Context menu, Data Grid, Rating, Tabs, Image Zoom, Switch, Skeleton loading pattern etc.

  - key: options.html_missing_elements.accordion
    t: Accordion
  - key: options.html_missing_elements.alert
    t: Alert
  - key: options.html_missing_elements.calendar
    t: Calendar
  - key: options.html_missing_elements.carousel
    t: Carousel
  - key: options.html_missing_elements.combobox_autocomplete
    t: Combobox / Autocomplete
  - key: options.html_missing_elements.command_palette
    t: Command Palette
  - key: options.html_missing_elements.context_menu
    t: Context Menu / Right-Click Menu
  - key: options.html_missing_elements.datatable
    t: Data table (with sorting, filtering, etc.)
  - key: options.html_missing_elements.dropdown_menu
    t: Dropdown Menu
  - key: options.html_missing_elements.image_zoom
    t: Image Zoom
  - key: options.html_missing_elements.progress_bar
    t: Progress Bar
  - key: options.html_missing_elements.skeleton_loading_placeholder
    t: Skeleton UI / Loading Placeholder
  - key: options.html_missing_elements.switch
    t: Switch / Toggle
  - key: options.html_missing_elements.tabs
    t: Tabs
  # - key: options.html_missing_elements.toast_message
  #   t: Toast Message
  - key: options.html_missing_elements.tooltip
    t: Tooltip
  - key: options.html_missing_elements.offcanvas
    t: Off-Canvas Area
  - key: options.html_missing_elements.spinner
    t: Loading Spinner
  - key: options.html_missing_elements.segmented_button
    t: Segmented Button
  - key: options.html_missing_elements.scroll_area
    t: Infinite Scroll
  - key: options.html_missing_elements.icon
    t: Icon
  - key: options.html_missing_elements.star_rating
    t: Star Rating

  - key: usage.html_pain_points_freeform
    t: Other Pain Points
  - key: usage.html_pain_points_freeform.question
    t: Any other pain points around using HTML and related technologies?

  - key: usage.html_css_js_balance
    t: HTML/CSS vs JavaScript/TypeScript Balance
  - key: usage.html_css_js_balance.question
    t: How do you divide your time between writing HTML/CSS and JavaScript (or TypeScript) code?
  - key: options.html_css_js_balance.0
    t: 100% HTML/CSS
  - key: options.html_css_js_balance.4
    t: 50%–50%
  - key: options.html_css_js_balance.8
    t: 100% JS

  # other features

  - key: features.foo_attribute
    t: "`{id}` attribute"

  - key: features.slot_assignment
    t: Explicit slot assignment (`slot="foo"`)

  - key: features.tabindex
    t: "`tabindex` attribute"

  - key: features.respimg
    t: "`srcset` and `sizes` attributes"

  - key: features.model_element
    t: "`<model>` for AR/VR/3D content"

  - key: features.slot_def
    t: Defining slots (`<slot>` and `::slotted()`)

  - key: features.controlslist
    t: "`controlslist` attribute"

  - key: features.popover_api
    t: Popover API

  - key: features.lazy_loading
    t: Lazy loading

  - key: features.sandbox_attr
    t: "`sandbox` attribute for iframes"

  - key: features.details_element
    t: "`<details>` and `<summary>`"

  - key: features.crossorigin
    t: "`crossorigin` attribute"

  - key: features.host_css
    t: Styling component host (`:host`, `:host()`, `:host-context()`)

  - key: features.element_internals
    t: "`ElementInternals` API"

  - key: features.cors
    t: CORS

  - key: features.csp
    t: Content-Security Policy (CSP)

  - key: features.structured_data
    t: Structured data (RDFa, Microdata, Microformats)

  - key: features.extended_builtins
    t: Extended built-ins

  - key: features.html_modules
    t: HTML Modules

  - key: features.accordion
    t: Exclusive accordion

  - key: features.imperative_slot
    t: Imperative slot assignment

  # - key: features.focusgroup
  #   t: "`focusgroup` attribute"

  - key: features.form_validation
    t: Form validation

  - key: features.aria
    t: ARIA

  - key: features.rh_preconnect
    t: "Resource Hints: preconnect (`<link rel=preconnect>`)"

  - key: features.rh_prerender
    t: "Resource Hints: prerender (`<link rel=prerender>`)"

  - key: features.rh_preload
    t: "Resource Hints: preload (`<link rel=preload>`)"

  - key: features.resource_hints
    t: Resource Hints (all)

  - key: features.rh_prefetch
    t: "Resource Hints: prefetch (`<link rel=prefetch>`)"

  - key: features.declarative_shadow
    t: Declarative Shadow DOM (`<template shadowrootmode="open">`)

  - key: features.referrerpolicy
    t: "`referrerpolicy` attribute"

  - key: features.integrity
    t: Subresource Integrity (`integrity` attribute)

  - key: features.pwa_manifest
    t: PWA manifest

  - key: features.part_attr
    t: Exposing component parts (`part` attribute)

  - key: features.part_selector
    t: Styling component parts (`::part()`)

  - key: features.svg_element
    t: Inline SVG (`<svg>`)

  - key: features.math_element
    t: Inline MathML (`<math>`)

  - key: features.scoped_element_registries
    t: Scoped Custom Element Registries

  - key: features.navigation_api
    t: Navigation API

  - key: features.custom_elements_defining
    t: Defining Custom Elements

  - key: features.decoding
    t: "`decoding` attribute"

  - key: features.custom_elements_using
    t: Using Custom Elements

  - key: features.fencedframe
    t: Fenced frames

  - key: features.credentialless
    t: Credentialess iframes

  - key: features.media_capture
    t: HTML Media Capture

  - key: features.contenteditable_plaintext
    t: "`plaintext-only` value for `contenteditable`"

  - key: features.dom_parts
    t: DOM Parts

  - key: features.fetchpriority
    t: Fetch Priority API (`fetchpriority` attribute)

  - key: features.autocomplete
    t: '`autocomplete="hint"`'

  - key: features.inert_attribute
    t: "`inert` attribute"

  - key: features.client_hints
    t: HTTP client hints

  ###########################################################################
  # Survey Help
  ###########################################################################

  - key: features.features_intro_html
    t: |
      Welcome to the survey! These first couple sections are all about figuring out
      which **features** of HTML (and related APIs) you know about.

      By the way, if you want to learn more about any item in the survey, you can add it to your reading list by clicking its little "+" icon!
